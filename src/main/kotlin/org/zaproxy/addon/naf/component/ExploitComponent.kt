package org.zaproxy.addon.naf.component

import androidx.compose.runtime.mutableStateListOf
import com.arkivanov.decompose.ComponentContext
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.launch
import org.parosproxy.paros.control.Control
import org.parosproxy.paros.extension.history.ExtensionHistory
import org.zaproxy.addon.naf.NafService
import org.zaproxy.addon.naf.model.*
import kotlin.coroutines.CoroutineContext

class ExploitComponent(
    componentContext: ComponentContext,
    val nafService: NafService,
    override val coroutineContext: CoroutineContext
): ComponentContext by componentContext, CoroutineScope {

    val listExploitTab = mutableStateListOf<ExploitTab>(StartTab())

    private val extensionHistory: ExtensionHistory by lazy {
        Control
            .getSingleton()
            .extensionLoader
            .getExtension(ExtensionHistory::class.java)
    }

    fun handleExploitEvent(event: ExploitEvent) {
        when (event) {
            is SqlInjectionEvent -> {

            }
        }
    }

    fun createNewTab(): ExploitTab {
        return createSqlmapTab()
    }

    fun startAttack(index: Int) {
        launch {
            listExploitTab[index].exploit()
        }
    }

    private fun createSqlmapTab(): SqlmapTab = SqlmapTab(nafService.sqlmapEngine!!)
}
