package org.zaproxy.addon.naf.component.exploit

import androidx.compose.runtime.MutableState
import androidx.compose.runtime.mutableStateMapOf
import androidx.compose.runtime.mutableStateOf
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.launch
import me.d3s34.lfi.LfiExploiter
import org.zaproxy.addon.naf.model.LfiRequest
import org.zaproxy.addon.naf.model.emptyLfiRequest

class LfiTabComponent(
    val lfiExploiter: LfiExploiter,
): ExploitTabComponent("LFI") {

    val currentFile = mutableStateOf("")
    val cacheFLI = mutableStateMapOf<String, String>()
    val lfiRequest = mutableStateOf(emptyLfiRequest())
    override suspend fun exploit() {
        if (!cacheFLI.contains(lfiRequest.value.filePath)){
            cacheFLI[lfiRequest.value.filePath] = lfiExploiter.exploit(lfiRequest.value)
        }
        currentFile.value = cacheFLI[lfiRequest.value.filePath] ?: ""
    }

    fun resetTarget() {
        cacheFLI.clear()
    }

    override suspend fun onClose() {}
}